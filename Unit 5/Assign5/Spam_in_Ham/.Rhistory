emails = read.csv('emails.csv')
emails = read.csv('emails.csv',stringsAsFactors=FALSE)
str(emails)
table(emails$spam)
emails$text[1]
which.max(nchar(emails$text))
max(nchar(emails$text))
which.min(nchar(emails$text))
library(tm)
library(SnowballC)
corpus = VCorpus(VectorSource(emails$text))
corpus = tm_map(corpus, content_transformer(tolower))
corpus = tm_map(corpus, PlainTextDocument)]
corpus = tm_map(corpus, PlainTextDocument)
corpus = tm_map(corpus, removePunctuation)
corpus = tm_map(corpus, removeWords, stopwords("english"))
corpus = tm_map(corpus, stemDocument)
dtm = DocumentTermMatrix(corpus)
summary(dtm)
nrow(dtm)
str(dtm)
dtm = removeSparseTerms(dtm, 0.95)
ncol(dtm)
str(dtm)
emailsSparse = as.data.frame(as.matrix(dtm))
str(emailsSparse)
colnames(emailsSparse) = make.names(colnames(emailsSparse))
which.max(colSums(emailsSparse))
emailsSparse$spam = emails$spam
sort(colSums(subset(emailsSparse, spam == 0)))
sort(colSums(subset(emailsSparse, spam == 1)))
spamLog = glm(spam~., data=train, family="binomial")
spamCART = rpart(spam~., data=train, method="class")
set.seed(123)
emailsSparse$spam = as.factor(emailsSparse$spam)
set.seed(123)
library(caTools)
spl = sample.split(emailsSparse$spam, 0.7)
train = subset(emailsSparse, spl == TRUE)
test = subset(emailsSparse, spl == FALSE)
spamLog = glm(spam~., data=train, family="binomial")
spamCART = rpart(spam~., data=train, method="class")
set.seed(123)
library(rpart)
library(rpart.plot)
spamCART = rpart(spam~., data=train, method="class")
spamRF = randomForest(spam~., data=train)
library(randomForest)
spamRF = randomForest(spam~., data=train)
predTrainLog = predict(spamLog, type="response")
predTrainCART = predict(spamCART)[,2]
predTrainRF = predict(spamRF, type="prob")[,2]
table(predTrainLog < 0.00001)
table(predTrainLog > 0.99999)
table(predTrainLog >= 0.00001 & predTrainLog <= 0.99999)
summary(spamLog)
prp(spamCART)
table(train$spam, predTrainLog > 0.5)
 (3052+954)/nrow(train)
library(ROCR)
predictionTrainLog = prediction(predTrainLog, train$spam)
as.numeric(performance(predictionTrainLog, "auc")@y.values)
table(train$spam, predTrainCART > 0.5)
(2885+894)/nrow(train)
predictionTrainCART = prediction(predTrainCART, train$spam)
as.numeric(performance(predictionTrainCART, "auc")@y.values)
table(train$spam, predTrainRF > 0.5)
(3013+914)/nrow(train)
predictionTrainRF = prediction(predTrainRF, train$spam)
as.numeric(performance(predictionTrainRF, "auc")@y.values)
table(test$spam, predTestLog > 0.5)
predTestLog = predict(spamLog, newdata=test, type="response")
predTestCART = predict(spamCART, newdata=test)[,2]
predTestRF = predict(spamRF, newdata=test, type="prob")[,2]
table(test$spam, predTestLog > 0.5)
(1257+376)/nrow(test)
predictionTestLog = prediction(predTestLog, test$spam)
as.numeric(performance(predictionTestLog, "auc")@y.values)
table(test$spam, predTestCART > 0.5)
(1228+386)/nrow(test)
predictionTestCART = prediction(predTestCART, test$spam)
as.numeric(performance(predictionTestCART, "auc")@y.values)
table(test$spam, predTestRF > 0.5)
(1290+385)/nrow(test)
predictionTestRF = prediction(predTestRF, test$spam)
as.numeric(performance(predictionTestRF, "auc")@y.values)
wordCount = rowSums(as.matrix(dtm))
hist(wordCount)
emailsSparse$logWordCount = log(wordCount)
boxplot(emailsSparse$logWordCount~emailsSparse$spam)
train2 = subset(emailsSparse, spl == TRUE)
test2 = subset(emailsSparse, spl == FALSE)
spam2CART = rpart(spam~., data=train2, method="class")
set.seed(123)
spam2RF = randomForest(spam~., data=train2)
prp(spam2CART)
predTest2CART = predict(spam2CART, newdata=test2)[,2]
predTest2RF = predict(spam2RF, newdata=test2, type="prob")[,2]
table(test2$spam, predTest2CART > 0.5)
(1214+384)/nrow(test2)
predictionTest2CART = prediction(predTest2CART, test2$spam)
as.numeric(performance(predictionTest2CART, "auc")@y.values)
table(test2$spam, predTest2RF > 0.5)
(1296+383)/nrow(test2)
predictionTest2RF = prediction(predTest2RF, test2$spam)
as.numeric(performance(predictionTest2RF, "auc")@y.values)
q()
