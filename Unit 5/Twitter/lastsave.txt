
R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: i386-w64-mingw32/i386 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> tweets = read.csv('tweets.csv',stringsAsFactors=FALSE)
> #StringsAsFactors is always added when we are considering a text analytics problem
> str(tweets)
'data.frame':   1181 obs. of  2 variables:
 $ Tweet: chr  "I have to say, Apple has by far the best customer care service I have ever received! @Apple @AppStore" "iOS 7 is so fricking smooth & beautiful!! #ThanxApple @Apple" "LOVE U @APPLE" "Thank you @apple, loving my new iPhone 5S!!!!!  #apple #iphone5S pic.twitter.com/XmHJCU4pcb" ...
 $ Avg  : num  2 2 1.8 1.8 1.8 1.8 1.8 1.6 1.6 1.6 ...
> tweets$Negative = as.factor(tweets$Avg<=-1)
> table(tweets$Negative)

FALSE  TRUE 
  999   182 
> str(tweets)
'data.frame':   1181 obs. of  3 variables:
 $ Tweet   : chr  "I have to say, Apple has by far the best customer care service I have ever received! @Apple @AppStore" "iOS 7 is so fricking smooth & beautiful!! #ThanxApple @Apple" "LOVE U @APPLE" "Thank you @apple, loving my new iPhone 5S!!!!!  #apple #iphone5S pic.twitter.com/XmHJCU4pcb" ...
 $ Avg     : num  2 2 1.8 1.8 1.8 1.8 1.8 1.6 1.6 1.6 ...
 $ Negative: Factor w/ 2 levels "FALSE","TRUE": 1 1 1 1 1 1 1 1 1 1 ...
> install.packages('tm')
--- Please select a CRAN mirror for use in this session ---
also installing the dependencies ‘NLP’, ‘slam’, ‘xml2’

trying URL 'https://cloud.r-project.org/bin/windows/contrib/3.6/NLP_0.2-0.zip'
Content type 'application/zip' length 393252 bytes (384 KB)
downloaded 384 KB

trying URL 'https://cloud.r-project.org/bin/windows/contrib/3.6/slam_0.1-47.zip'
Content type 'application/zip' length 211121 bytes (206 KB)
downloaded 206 KB

trying URL 'https://cloud.r-project.org/bin/windows/contrib/3.6/xml2_1.3.2.zip'
Content type 'application/zip' length 3177838 bytes (3.0 MB)
downloaded 3.0 MB

trying URL 'https://cloud.r-project.org/bin/windows/contrib/3.6/tm_0.7-7.zip'
Content type 'application/zip' length 1372137 bytes (1.3 MB)
downloaded 1.3 MB

package ‘NLP’ successfully unpacked and MD5 sums checked
package ‘slam’ successfully unpacked and MD5 sums checked
package ‘xml2’ successfully unpacked and MD5 sums checked
package ‘tm’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
        C:\Users\pc\AppData\Local\Temp\RtmpQrvchB\downloaded_packages
> library(tm)
Loading required package: NLP
Warning message:
package ‘tm’ was built under R version 3.6.3 
> install.packages('SnowballC')
trying URL 'https://cloud.r-project.org/bin/windows/contrib/3.6/SnowballC_0.7.0.zip'
Content type 'application/zip' length 454097 bytes (443 KB)
downloaded 443 KB

package ‘SnowballC’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
        C:\Users\pc\AppData\Local\Temp\RtmpQrvchB\downloaded_packages
> corpus = Corpus(VectorSource(tweets$Tweet))
> corpus
<<SimpleCorpus>>
Metadata:  corpus specific: 1, document level (indexed): 0
Content:  documents: 1181
> corpus[[1]]
<<PlainTextDocument>>
Metadata:  7
Content:  chars: 101
> corpus[1]
<<SimpleCorpus>>
Metadata:  corpus specific: 1, document level (indexed): 0
Content:  documents: 1
> corpus[[[1]]]
Error: unexpected '[' in "corpus[[["
> print(corpus[[1]])
<<PlainTextDocument>>
Metadata:  7
Content:  chars: 101
> library(SnowballC)
Warning message:
package ‘SnowballC’ was built under R version 3.6.3 
> corpus = Corpus(VectorSource(tweets$Tweet))
> corpus[[1]]
<<PlainTextDocument>>
Metadata:  7
Content:  chars: 101
> corpus = tm_map(corpus,tolower)
Warning message:
In tm_map.SimpleCorpus(corpus, tolower) : transformation drops documents
> corpus
<<SimpleCorpus>>
Metadata:  corpus specific: 1, document level (indexed): 0
Content:  documents: 1181
> corpus = tm_map(corpus,removePunctuation)
Warning message:
In tm_map.SimpleCorpus(corpus, removePunctuation) :
  transformation drops documents
> stopwords('english')[1:10]
 [1] "i"         "me"        "my"        "myself"    "we"        "our"      
 [7] "ours"      "ourselves" "you"       "your"     
> corpus = tm_map(corpus,removeWords, c('apple',stopwords('english')))
Warning message:
In tm_map.SimpleCorpus(corpus, removeWords, c("apple", stopwords("english"))) :
  transformation drops documents
> corpus = tm_map(corpus,stemDocument)
Warning message:
In tm_map.SimpleCorpus(corpus, stemDocument) :
  transformation drops documents
> corpus[[1]]
<<PlainTextDocument>>
Metadata:  7
Content:  chars: 51
> frequencies = DocumentTermMatrix(corpus)
> frequencies
<<DocumentTermMatrix (documents: 1181, terms: 3289)>>
Non-/sparse entries: 8980/3875329
Sparsity           : 100%
Maximal term length: 115
Weighting          : term frequency (tf)
> inspect(frequencies[1000:1005,505:515])
<<DocumentTermMatrix (documents: 6, terms: 11)>>
Non-/sparse entries: 1/65
Sparsity           : 98%
Maximal term length: 23
Weighting          : term frequency (tf)
Sample             :
      Terms
Docs   asap courtsideassistappforio current follow idea kickbutt preinstal save
  1000    0                       0       0      0    1        0         0    0
  1001    0                       0       0      0    0        0         0    0
  1002    0                       0       0      0    0        0         0    0
  1003    0                       0       0      0    0        0         0    0
  1004    0                       0       0      0    0        0         0    0
  1005    0                       0       0      0    0        0         0    0
      Terms
Docs   ssd support
  1000   0       0
  1001   0       0
  1002   0       0
  1003   0       0
  1004   0       0
  1005   0       0
> findFreqTerms(frequencies, lowfreq = 20)
 [1] "say"                  "love"                 "iphon"               
 [4] "iphone5"              "new"                  "thank"               
 [7] "phone"                "can"                  "make"                
[10] "market"               "one"                  "will"                
[13] "cant"                 "get"                  "just"                
[16] "updat"                "fingerprint"          "iphone5c"            
[19] "store"                "time"                 "come"                
[22] "now"                  "use"                  "back"                
[25] "anyon"                "work"                 "app"                 
[28] "android"              "think"                "ipad"                
[31] "well"                 "freak"                "dont"                
[34] "via"                  "better"               "like"                
[37] "pleas"                "samsung"              "want"                
[40] "batteri"              "ios7"                 "microsoft"           
[43] "itun"                 "buy"                  "releas"              
[46] "look"                 "appl"                 "need"                
[49] "googl"                "twitter"              "ipod"                
[52] "ipodplayerpromo"      "promoipodplayerpromo" "lol"                 
[55] "realli"               "promo"               
> findFreqTerms(frequencies, lowfreq = 30)
 [1] "iphon"                "iphone5"              "new"                 
 [4] "thank"                "phone"                "can"                 
 [7] "make"                 "one"                  "will"                
[10] "get"                  "just"                 "fingerprint"         
[13] "iphone5c"             "store"                "time"                
[16] "come"                 "now"                  "use"                 
[19] "app"                  "ipad"                 "freak"               
[22] "dont"                 "like"                 "want"                
[25] "itun"                 "look"                 "appl"                
[28] "need"                 "ipod"                 "ipodplayerpromo"     
[31] "promoipodplayerpromo"
> findFreqTerms(frequencies, lowfreq = 50)
 [1] "iphon"           "new"             "phone"           "make"           
 [5] "will"            "get"             "just"            "app"            
 [9] "ipad"            "freak"           "dont"            "like"           
[13] "itun"            "ipod"            "ipodplayerpromo"
> findFreqTerms(frequencies, lowfreq = 100)
[1] "iphon" "new"   "itun" 
> sparse = removeSparseTerms(frequencies, 0.995)
> # Keeping the terms which come in more than 5% of the tweets
> tweetsSparse = as.data.frame(as.matrix(sparse))
> colnames(tweetsSparse) = make.names(colnames(tweetsSparse))
> tweetsSparse$Negative = tweets$Negative
> library(caTools)
Warning message:
package ‘caTools’ was built under R version 3.6.3 
> set.seed(123)
> split = sample.split(tweetsSparse$Negative,splitRatio=0.7)
Error in sample.split(tweetsSparse$Negative, splitRatio = 0.7) : 
  unused argument (splitRatio = 0.7)
> trainSparse = subset(tweetsSparse,split==TRUE)
Error in split == TRUE : 
  comparison (1) is possible only for atomic and list types
> split = sample.split(tweetsSparse$Negative,SplitRatio=0.7)
> trainSparse = subset(tweetsSparse,split==TRUE)
> testSparse = subset(tweetsSparse,split==FALSE)
> library(rpart)
Warning message:
package ‘rpart’ was built under R version 3.6.3 
> library(rpart.plot)
Warning message:
package ‘rpart.plot’ was built under R version 3.6.3 
> tweetCART = rpart(Negative ~. , data = trainSparse,method='class')
> prp(tweetCART)
> predictCART = predict(tweetCART, newdata=testSparse,type='class')
> table(testSparse$Negative,predictCART)
       predictCART
        FALSE TRUE
  FALSE   294    6
  TRUE     37   18
> (294+18)/(294+6+37+18)
[1] 0.8788732
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.
Warning message:
package ‘randomForest’ was built under R version 3.6.3 
> set.seed(123)
> tweetRF = randomForest(Negative ~., data=trainSparse)
> predictRF = predict(tweetRF,newdata=testSparse)
> table(testSparse$Negative,predictRF)
       predictRF
        FALSE TRUE
  FALSE   292    8
  TRUE     31   24
> (292+24)/nrow(testSparse)
[1] 0.8901408
> predictions = predict(tweetLog, newdata=testSparse, type="response")
Error in predict(tweetLog, newdata = testSparse, type = "response") : 
  object 'tweetLog' not found
> 
> predictions = predict(tweetLog, newdata=testSparse, type="response")
Error in predict(tweetLog, newdata = testSparse, type = "response") : 
  object 'tweetLog' not found
> 
> tweetLog = glm(Negative ~ ., data=trainSparse, family="binomial")
Warning messages:
1: glm.fit: algorithm did not converge 
2: glm.fit: fitted probabilities numerically 0 or 1 occurred 
> predictLog = predict(tweetLog, newdata=testSparse, type="response")
Warning message:
In predict.lm(object, newdata, se.fit, scale = 1, type = if (type ==  :
  prediction from a rank-deficient fit may be misleading
> table(testSparse$Negative, predictLog > 0.5)
       
        FALSE TRUE
  FALSE   251   49
  TRUE     23   32
> 
