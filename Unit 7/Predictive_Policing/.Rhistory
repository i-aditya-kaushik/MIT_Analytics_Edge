mvt = read.csv('mvt.csv',stringsAsFactors=FALSE)
str(mvt)
mvt$Date = strptime(mvt$Date,format='%m/%d/%y %H:%M')
mvt$Weekday = weekdays(mvt$Date)
mvt$Hour = mvt$Date$hour
str(mvt)
table(mvt$Weekday)
WeekdayCounts = as.data.frame(table(mvt$Weekday))
str(WeekdayCounts)
library(ggplot2)
ggplot(WeekdayCounts,aes(x=Var1, y=Freq)) + geom_line(aes(group=1))
# Var1 is here not ordered.. In order to convert into a factor, do the following
WeekdayCounts$Var1 = factor(WeekdayCounts$Var1, ordered = TRUE, levels = c('Sunday','Monday','Tuesday','Wednesday','Thurday','Friday','Saturday'))
ggplot(WeekdayCounts,aes(x=Var1, y=Freq)) + geom_line(aes(group=1))
ggplot(WeekdayCounts,aes(x=Var1, y=Freq)) + geom_line(aes(group=1)) + xlab('Day of the Week
') + ylab('Total Motor Vehicle Thefts')
ggplot(WeekdayCounts,aes(x=Var1, y=Freq)) + geom_line(aes(group=1,linetype=2))
ggplot(WeekdayCounts,aes(x=Var1, y=Freq)) + geom_line(aes(group=1),linetype=2)
ggplot(WeekdayCounts,aes(x=Var1, y=Freq)) + geom_line(aes(group=1),alpha=0.3)
DayHourCounts = as.data.frame(table(mvt$Weekday,mvt$Hour))
str(DayHourCounts)
DayHourCounts$Hour = as.numeric(as.character(DayHourCounts$Var2))
str(DayHourCounts)
ggplot(DayHourCounts, aes(x=Hour,y=Freq)),geom_line(aes(group=Var1)))
ggplot(DayHourCounts, aes(x=Hour,y=Freq))+geom_line(aes(group=Var1))
ggplot(DayHourCounts, aes(x=Hour,y=Freq))+geom_line(aes(group=Var1,color=Var1),size=2)
DayHourCounts$Var1 = factor(DayHourCounts$Var1, ordered=TRUE, levels = c('Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'))
ggplot(DayHourCounts, aes(x=Hour,y=Var1))+geom_tile(aes(fill=Freq)
)
ggplot(DayHourCounts, aes(x=Hour,y=Var1))+geom_tile(aes(fill=Freq)) + scale_fill_gradient(name='Total MV Thefts')+theme(axis.title.y= element_blank)
ggplot(DayHourCounts, aes(x=Hour,y=Var1))+geom_tile(aes(fill=Freq)) + scale_fill_gradient(name='Total MV Thefts')+theme(axis.title.y= element_blank())
ggplot(DayHourCounts, aes(x=Hour,y=Var1))+geom_tile(aes(fill=Freq)) + scale_fill_gradient(name='Total MV Thefts',low='white)+theme(axis.title.y= element_blank())
'
)
ggplot(DayHourCounts, aes(x=Hour,y=Var1))+geom_tile(aes(fill=Freq)) + scale_fill_gradient(name='Total MV Thefts',low='white', high='red')+theme(axis.title.y= element_blank())
install.packages('maps')
intall.packages('ggmap')
install.packages('ggmap')
library(maps)
library(ggmap)
chicago = get_map(location = 'chicago',zoom = 11)
install.packages('OpenStreetMap')
library(OpenStreetMap)
ggmap(chicago)
gg_map(usa)
ggmap(usa)
ggmap
mad_map <- get_map(getbb("Madrid"), maptype = "toner-background")
if(!require("osmdata")) install.packages("osmdata")
if(!require("tidyverse")) install.packages("tidyverse")
if(!require("sf")) install.packages("sf")
mad_map <- get_map(getbb("Madrid"), maptype = "toner-background")
q <- getbb("Madrid") %>%
      opq() %>%
       add_osm_feature("amenity", "cinema")
if(!requireNamespace("devtools")) install.packages("devtools") devtools::install_github("dkahle/ggmap", ref = "tidyup", force = TRUE)
if(!requireNamespace("devtools"))
install.packages("devtools")
devtools::install_github("dkahle/ggmap", ref = "tidyup", force = TRUE)
ggmap(india)
ggmap(chicago)
library(maps)
library(ggmap)
chicago = get_map(location = 'chicago',zoom=11)
register_google(key = "AIzaSyCH2TQFnzIYzL1qWh930ChJbw5ruHJYSNY")
chicago = get_map(location = 'chicago',zoom=11)
chicago = get_map(location = 'chicago',zoom=11)
chicago = get_map(location = 'chicago')
chicago = get_map(location = 'chicago')
if(!requireNamespace("devtools"))
install.packages("devtools")
devtools::install_github("dkahle/ggmap", ref = "tidyup", force = TRUE)
devtools::install_github("dkahle/ggmap", ref = "tidyup")
install.packages("devtools")
devtools::install_github("dkahle/ggmap", ref = "tidyup", force = TRUE)
install.packages("bindrcpp")
devtools::install_github("dkahle/ggmap", ref = "tidyup", force = TRUE)
install.packages("ggmap")
install.packages("ggmap")
devtools::install_github("dkahle/ggmap", ref = "tidyup", force = TRUE)
install.packages("ggmap")
q()
