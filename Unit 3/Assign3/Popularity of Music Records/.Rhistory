songs = read.csv('songs.csv')
table(songs$year)
table(songs$artistname == 'Michael Jackson')
mj10 = subset(songs,artistname == 'Michael Jackson' & Top10 == '1')
mj10[c('songtitle')]
table(songs$timesignature)
songs$songtitle[which.max(songs$tempo)]
train = subset(songs, year<=2009)
test = subset(songs, year>=2010)
str(train)
nrow(train)
nrow(test)
nonvars = c("year", "songtitle", "artistname", "songID", "artistID")
SongsTrain = train[ , !(names(train) %in% nonvars) ]
str(SongsTrain)
SongsTest = test[ , !(names(test) %in% nonvars) ]
SongsLog1 = glm(Top10 ~ ., data=SongsTrain, family=binomial)
summary(SongsLog1)
cor(SongsTrain$loudness,SongsTrain$energy)
SongsLog2 = glm(Top10 ~ . - loudness, data=SongsTrain, family=binomial)
summary(SongsLog2)
SongsLog2 = glm(Top10 ~ . - energy, data=SongsTrain, family=binomial)
SongsLog2 = glm(Top10 ~ . - loudness, data=SongsTrain, family=binomial)
SongsLog3 = glm(Top10 ~ . - loudness, data=SongsTrain, family=binomial)
summary(SongsLog3)
SongsLog3 = glm(Top10 ~ . - energy, data=SongsTrain, family=binomial)
summary(SongsLog3)
pred1 = predict(SongsLog3,type='response')
table(SongsTest$Top10, pred1>=0.45)
TestPrediction = predict(SognLog3, newdata = SongsTest , type = 'response')
TestPrediction = predict(SongLog3, newdata = SongsTest , type = 'response')
TestPrediction = predict(SongsLog3, newdata = SongsTest , type = 'response')
table(SongsTest$Top10, pred1>=0.45)
table(SongsTest$Top10, TestPrediction>=0.45)
(309+19)/(309+19+45)
table(SongsTest$Top10)
19/(19+40)->sensitivity 
sensitivity
309/(309+5) -> specificity
specificity
q()
