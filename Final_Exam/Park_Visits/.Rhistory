park = read.csv('park_visits.csv')
str(park)
table(park$Month, park$ParkType)
table(park$ParkType)
which.max(park$logVisits)
park$ParkName[11590]
tapply(park$Month,park$logVisits,mean)
q()
july = subset(park,Month==7)
tapply(park$logVisits,mean)
tapply(park$Region,park$logVisits,mean)
tapply(park$Region,park$logVisits,mean,na.rm=TRUE)
tapply(park$logVisits,park$Region,mean)
tapply(july$logVisits,july$Region,mean)
table(park$Month)
str(park)
july16 = subset(park,Month==7 and Year==2016)
july16 = subset(park,Month==7 && Year==2016)
tapply(july16$logVisits,july16$Region,mean)
july16 = subset(july, Year==2016)
tapply(july16$logVisits,july16$Region,mean)
cor(park$cost,park$logVisits)
cor(july16$cost,july16$logVisits)
ys_ts=ts(ys$logVisits,start=c(2010,1),freq=12)
ys = subset(park,ParkName == 'Yellowstone NP')
ys_ts=ts(ys$logVisits,start=c(2010,1),freq=12)
plot(ys_ts)
colSums(is.na(visits))
colSums(is.na(park))
park = park[rowSums(is.na(visits)) == 0, ]
park = park[rowSums(is.na(park)) == 0, ]
nrow(park)
colSums(is.na(park))
visits$Month = as.factor(visits$Month)
park$Month = as.factor(park$Month)
train = subset(park,Year<=2014)
test = subset(park,Year>=2015)
mod = lm(logVisits ~ laglogVisits,data = pisaTrain)
mod = lm(logVisits ~ laglogVisits,data = park)
summary(mod)
mod = lm(logVisits ~ laglogVisits,data = train)
summary(mod)
pre = predict(mod, newdata = test)
sum((pre-test$laglogVisits)^2)
SSE = sum(mod$residuals^2)
SSE
baseline = mean(train$laglogVisits)
sum((baseline-test$laglogVisits)^2)
1-11317.3
1- (11317.3/42561.17)
SSE = sum(pre$residuals^2)
SSE = sum((pre$residuals)^2)
SSE = sum((pre - test$laglogVisits)^2)
SSE
1- (220.6361/42561.17)
q()
