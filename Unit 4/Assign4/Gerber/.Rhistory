gerber = read.csv('gerber.csv')
str(gerber)
table(gerber$voting)
108696/nrow(gerber)
table(gerber$voting,gerber$hawthrone)
table(gerber$voting,gerber$hawthorne)
tapply(gerber$voting, gerber$civicduty, mean)
tapply(gerber$voting, gerber$hawthorne, mean)
tapply(gerber$voting, gerber$self, mean)
tapply(gerber$voting, gerber$neighbors, mean)
log1 = glm(voting ~ civicduty+hawthorne+self+neighbors, data = gerber, family = binomial)
summary(log1)
predictTrain = predict(QualitiyLog, type = "response")
predictTrain = predict(log1, type = "response")
table(gerber$voting, predictTrain > 0.3)
(134513+51966)/nrow(gerber)
table(gerber$voting, predictTrain > 0.5)
235388/nrow(gerber)
ROCRpred = predict(predictTrain, gerber$voting)
library(ROCR)
ROCRpred = predict(predictTrain, gerber$voting)
ROCRpred = prediction(predictTrain,gerber$voting)
ROCRperf = performance(ROCRpred, "tpr","fpr")
auc = as.numeric(performance(ROCRpred,"auc")@y.values)
auc
CARTmodel = rpart(voting ~ civicduty + hawthorne + self + neighbors, data=gerber)
library(rpart)
library(rpart.plot)
CARTmodel = rpart(voting ~ civicduty + hawthorne + self + neighbors, data=gerber)
prp(CARTmodel)
CARTmodel2 = rpart(voting ~ civicduty + hawthorne + self + neighbors, data=gerber, cp=0.0)
prp(CARTmodel2)
CARTmodel2 = rpart(voting ~ civicduty + hawthorne + self + neighbors+sex, data=gerber, cp=0.0)
prp(CARTmodel2)
CARTmodel2 = rpart(voting ~ control, data=gerber, cp=0.0)
CARTmodelsexc = rpart(voting ~ control+sex, data=gerber, cp=0.0)
prp(CARTmodel2, digits=6)
prp(CARTmodelsexc, digits=6)
LogModelSex = glm(voting ~ control + sex, data=gerber, family="binomial")
summary(LogModelSex)
Possibilities = data.frame(sex=c(0,0,1,1),control=c(0,1,0,1))
predict(LogModelSex, newdata=Possibilities, type="response")
LogModel2 = glm(voting ~ sex + control + sex:control, data=gerber, family="binomial")
summary(LogModel2)
predict(LogModel2, newdata=Possibilities, type="response")
q()
