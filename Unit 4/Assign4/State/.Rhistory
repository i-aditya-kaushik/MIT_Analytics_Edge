data(state)
statedata = data.frame(state.x77)
str(statedata)
RegModel = lm(Life.Exp ~ ., data=statedata)
summary(RegModel)
Predictions = predict(RegModel)
sum((statedata$Life.Exp - Predictions)^2)
sum((statedata$residual)^2)
sum(RegModel$residual^2)
RegModel2 = lm(Life.Exp ~ Population + Murder + Frost + HS.Grad, data=statedata)
summary(RegModel2)
sum(RegModel2$residual^2)
library(rpart)
library(rpart.plot)
CARTmodel = rpart(Life.Exp ~ ., data=statedata)
prp(CARTmodel)
PredictionsCART = predict(CARTmodel)
sum((statedata$Life.Exp - PredictionsCART)^2)
CARTmodel2 = rpart(Life.Exp ~ ., data=statedata, minbucket=5)
prp(CARTmodel2)
PredictionsCART = predict(CARTmodel2)
sum((statedata$Life.Exp - PredictionsCART)^2)
CARTmodel3 = rpart(Life.Exp ~ Area, data=statedata, minbucket=1)
PredictionsCART3 = predict(CARTmodel3)
sum((statedata$Life.Exp - PredictionsCART3)^2)
library(caret)
set.seed(111)
fitControl = trainControl(method = "cv", number = 10)
cartGrid = expand.grid(.cp = seq(0.01, 0.5, 0.01) )
train(Life.Exp ~ ., data=statedata, method="rpart", trControl = fitControl, tuneGrid = cartGrid)
CARTmodel4 = rpart(Life.Exp ~ ., data=statedata, cp=0.12)
prp(CARTmodel4)
PredictionsCART4 = predict(CARTmodel4)
sum((statedata$Life.Exp - PredictionsCART4)^2)
set.seed(111)
train(Life.Exp ~ Area, data=statedata, method="rpart", trControl = fitControl, tuneGrid = cartGrid )
CARTmodel5 = rpart(Life.Exp ~ Area, data=statedata, cp=0.02)
prp(CARTmodel5)
sum((statedata$Life.Exp - PredictionsCART5)^2)
PredictionsCART5 = predict(CARTmodel5)
sum((statedata$Life.Exp - PredictionsCART5)^2)
q()
